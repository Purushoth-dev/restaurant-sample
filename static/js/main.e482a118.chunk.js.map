{"version":3,"sources":["logo.svg","store/restaurantSlice.js","Card.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["fetchData","createAsyncThunk","body","thunkAPI","a","axios","post","response","data","error","errorMessage","banners","listRestaurants","rejectWithValue","counterSlice","createSlice","name","initialState","list","loading","reducers","addFoodToCart","state","action","extraReducers","pending","fulfilled","payload","rejected","Card","props","useState","expand","setExpand","className","src","restaurantImage","restaurantName","cuisines","averageReview","displayTime","outlet","length","displayCostForTwo","onClick","map","val","outletName","App","RestaurantList","useSelector","restaurants","console","log","dispatch","useDispatch","useEffect","rotate","restaurant","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e482a118.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\n\r\nconst url = \"https://eatoo.uberdoo.com/foodapp/public/api/guest/listRestaurant\";\r\n\r\nexport const fetchData = createAsyncThunk('restaurants/fetch-data', \r\nasync (body, thunkAPI) => {\r\n\r\n  try {\r\n    let response =  await axios.post(url, body);\r\n\r\n    const {\r\n      error,\r\n      errorMessage,\r\n      banners,\r\n      listRestaurants\r\n    } = response.data;\r\n    \r\n    if(error !== \"false\") {\r\n      return thunkAPI.rejectWithValue(errorMessage);\r\n    }\r\n\r\n    return listRestaurants;\r\n  }\r\n  catch(error) {\r\n    thunkAPI.rejectWithValue(error.response.data);\r\n  }\r\n})\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'restaurants',\r\n  initialState: {\r\n    list : [],\r\n    loading: false,\r\n    error: null\r\n  },\r\n  reducers : {\r\n    addFoodToCart: (state, action) => {\r\n\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [fetchData.pending]: (state, action) => {\r\n        state.loading = true;\r\n    },\r\n    [fetchData.fulfilled]: (state, action) => {\r\n        state.list = action.payload;\r\n        state.loading = false\r\n        state.error = null\r\n    }, \r\n    [fetchData.rejected] :(state, action) =>{\r\n        state.error= action.payload\r\n        state.loading = false\r\n        state.list=[]\r\n    }\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n\r\n\r\nexport default counterSlice.reducer","import React, {useState} from 'react';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport \"./assets/css/style.css\"\r\n\r\nfunction Card({props}) {\r\n\r\n    const [ expand, setExpand ] = useState(false);\r\n\r\n    // console.log(props);\r\n\r\n    const outlet = (val) => (\r\n        <div className=\"multi-outLets\">\r\n            {val.outletName}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <img className=\"imgs\" src={props.restaurantImage}></img>\r\n                <div className=\"main-box\">\r\n                <div className=\"header\">{props.restaurantName}</div>\r\n                <div className=\"sub-header\">{props.cuisines}</div>\r\n                <span className=\"review\"> {'â˜…'} {props.averageReview}</span>\r\n                <div className=\"time\">{props.displayTime}</div>\r\n                <div className={props.outlet.length <= 1 ? \"price spac-bt\": \"price\"}>{props.displayCostForTwo}</div>\r\n                \r\n                {/* Outlets */}\r\n             {props.outlet.length > 1 && (\r\n                    <div className=\"button btn btn-primary spac-bt\" onClick={()=>setExpand(!expand)}> {props.outlet.length} Outlets near you <span className=\"ritArr\"><KeyboardArrowRightIcon /></span></div>\r\n                )}\r\n\r\n                {expand && props.outlet.map(outlet)}\r\n              </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import logo from './logo.svg';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchData } from './store/restaurantSlice';\nimport TuneIcon from '@material-ui/icons/Tune';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nimport Card from './Card';\n\nimport \"./assets/css/style.css\"\n\nfunction App() {\n\n  const RestaurantList = useSelector(state => state.restaurants.list)\n  console.log()\n\n  \n  const dispatch = useDispatch()\n \n  useEffect(() => {\n    dispatch(fetchData({\"latitude\":13.0358481, \"longitude\":80.244455 }))\n  }, [])\n\n  useEffect(() => {\n    console.log(RestaurantList);\n  }, [RestaurantList])\n\n  return (\n    <div className=\"body\">\n      {/* NavBar */}\n      <div className=\"navbar\">\n          <div className=\"options option-1\">\n            {RestaurantList.length} Restaurants\n          </div>\n\n          <div className=\"options option-2\">\n            Relevance <span className=\"downArr\"><KeyboardArrowDownIcon /></span>\n          </div>\n\n          <div className=\"options option-3\">\n            Filter <span className=\"sliderArr\"><TuneIcon rotate={true}/></span>\n          </div>\n          \n      </div>\n\n      {/* List */}\n      {RestaurantList.map((restaurant, i) => <Card key={`${i}`} props={restaurant} /> )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport restaurants from './restaurantSlice';\r\n\r\nexport default configureStore({\r\n  reducer: { restaurants },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}